name: Build and Test

on:
  push:
    branches: [ "main", "master" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  FLUTTER_VERSION: "3.27.3"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "rust -> target"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.10.22

      - name: Install flutter_rust_bridge_codegen and cargo-expand and fvm
        run: |
          set -eux -o pipefail
          curl -fsSL https://fvm.app/install.sh | bash
          cargo binstall --no-confirm --no-symlinks --force cargo-expand
          cargo binstall --no-confirm --no-symlinks --force flutter_rust_bridge_codegen --version "2.7.1"

      # - name: lint lib before codegen
      #   run: |
      #     set -eux -o pipefail
      #     pushd rust
      #    # cargo clippy -- -D warnings
      #    # cargo fmt -- --check

      - name: Generate bridge code
        run: |
          set -eux -o pipefail
          mkdir -p lib/src/rust
          flutter_rust_bridge_codegen generate
          # just ensure the version
          # sed -i --debug "s/2.7.1/2.7.0/g" rust/src/frb_generated.rs

      - name: Flutter pub get
        run: flutter pub get

      - name: build lib
        run: |
          set -eux -o pipefail
          pushd rust
          cargo build --release


      - name: test
        run: |
          dart run lib/example.dart
          dart run lib/migrate.dart
          dart run lib/schedule.dart
          dart run lib/optimize.dart

      # - name: Debugging with tmate
      #   uses: mxschmitt/action-tmate@v3.19


      # - name: Flutter analyze
      #   run: flutter analyze
